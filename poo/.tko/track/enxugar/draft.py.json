{
    "patches": [
        {
            "label": "2025-09-23_14-02-41",
            "content": "@@ -1069,13 +1069,11 @@\n == %22\n-criar\n+new\n %22: #\n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-03-20",
            "content": "@@ -907,23 +907,16 @@\n tr =\n- (%22$%22 +\n  input()\n ) #E\n@@ -911,17 +911,16 @@\n  input()\n-)\n  #Entrad\n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-06-14",
            "content": "@@ -1073,17 +1073,16 @@\n %5B0%5D == %22\n-$\n criar%22: \n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-07-15",
            "content": "@@ -282,14 +282,8 @@\n rn f\n-%22$%22 + \n %22col\n@@ -907,16 +907,23 @@\n tr =\n+ (%22$%22 +\n  input()\n  #En\n@@ -918,16 +918,17 @@\n  input()\n+)\n  #Entrad\n@@ -1073,16 +1073,17 @@\n %5B0%5D == %22\n+$\n criar%22: \n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-10-28",
            "content": "@@ -278,16 +278,22 @@\n return f\n+%22$%22 + \n %22color:%7B\n@@ -921,12 +921,8 @@\n ut()\n-%5B1:%5D\n  #En\n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-11-18",
            "content": "@@ -911,16 +911,20 @@\n  input()\n+%5B1:%5D\n  #Entrad\n@@ -939,35 +939,8 @@\n has%0A\n-        print (%22$%22 + line)%0A\n     \n",
            "lines": "50"
        },
        {
            "label": "2025-09-23_14-18-13",
            "content": "@@ -285,17 +285,16 @@\n f%22color:\n- \n %7Bself.co\n@@ -303,17 +303,12 @@\n r%7D, \n-Tamanho: \n+tam:\n %7Bsel\n@@ -320,18 +320,12 @@\n e%7D, \n-Humidade: \n+hum:\n %7Bsel\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-19-11",
            "content": "@@ -279,17 +279,19 @@\n eturn f%22\n-C\n+col\n or: %7Bsel\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-19-23",
            "content": "@@ -283,16 +283,17 @@\n n f%22Cor:\n+ \n %7Bself.co\n@@ -306,16 +306,17 @@\n Tamanho:\n+ \n %7Bself.si\n@@ -329,16 +329,17 @@\n umidade:\n+ \n %7Bself.we\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-20-24",
            "content": "@@ -283,17 +283,16 @@\n n f%22Cor:\n- \n %7Bself.co\n@@ -305,17 +305,16 @@\n Tamanho:\n- \n %7Bself.si\n@@ -327,17 +327,16 @@\n umidade:\n- \n %7Bself.we\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-21-30",
            "content": "@@ -297,16 +297,17 @@\n .color%7D,\n+ \n Tamanho:\n@@ -319,16 +319,17 @@\n f.size%7D,\n+ \n Humidade\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-23-48",
            "content": "@@ -297,17 +297,16 @@\n .color%7D,\n- \n Tamanho:\n@@ -318,17 +318,16 @@\n f.size%7D,\n- \n Humidade\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-24-53",
            "content": "@@ -324,9 +324,10 @@\n e%7D, \n-U\n+Hu\n mida\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-26-30",
            "content": "@@ -319,17 +319,16 @@\n f.size%7D,\n- \n  Umidade\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-26-56",
            "content": "@@ -319,16 +319,17 @@\n f.size%7D,\n+ \n  Umidade\n@@ -1247,15 +1247,12 @@\n == %22\n-mostrar\n+show\n %22:%0A \n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-28-34",
            "content": "@@ -1307,12 +1307,11 @@\n == %22\n-seca\n+dry\n %22: #\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-29-25",
            "content": "@@ -1303,19 +1303,20 @@\n %5B0%5D == %22\n-dry\n+seca\n %22: #amou\n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-30-04",
            "content": "@@ -579,134 +579,8 @@\n ()%0A%0A\n-    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def wringOut(self) -%3E None:%0A        self.wetness == 0%0A%0A\n     \n@@ -1282,72 +1282,8 @@\n ha)%0A\n-        elif args%5B0%5D == %22seca%22:%0A            print(toalha.isDry)%0A\n     \n",
            "lines": "51"
        },
        {
            "label": "2025-09-23_14-42-49",
            "content": "@@ -1466,18 +1466,16 @@\n ha.isDry\n-()\n )%0A      \n",
            "lines": "59"
        },
        {
            "label": "2025-09-23_14-43-33",
            "content": "@@ -1458,17 +1458,8 @@\n int(\n-%22sim%22 if \n toal\n@@ -1472,19 +1472,8 @@\n ry()\n- else %22nao%22\n )%0A  \n",
            "lines": "59"
        },
        {
            "label": "2025-09-23_14-44-17",
            "content": "@@ -1519,15 +1519,11 @@\n == %22\n-enxugar\n+dry\n %22: #\n",
            "lines": "59"
        },
        {
            "label": "2025-09-23_14-48-46",
            "content": "@@ -1408,72 +1408,8 @@\n ha)%0A\n-        elif args%5B0%5D == %22torcer%22:%0A            toalha.wringOut()%0A\n     \n",
            "lines": "59"
        },
        {
            "label": "2025-09-23_14-51-06",
            "content": "@@ -551,17 +551,17 @@\n wetness \n-=\n+-\n  self.ge\n",
            "lines": "61"
        },
        {
            "label": "2025-09-23_14-52-57",
            "content": "@@ -688,32 +688,33 @@\n   self.wetness =\n+=\n  0%0A%0A    def getM\n",
            "lines": "61"
        },
        {
            "label": "2025-09-23_15-01-06",
            "content": "import sys\nsys.stdout.reconfigure(encoding='utf-8')\n\nclass Towel:\n    def __init__(self, color: str, size: str): #Construtor\n        self.color = color #Atributos\n        self.size = size\n        self.wetness = 0\n\n    def __str__(self): #Transforma em Texto - toString\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\n    def dry(self, amount: int) -> None: #Aumenta qnt de \u00e1gua\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == \"P\":\n            return 10\n        if self.size == \"M\":\n            return 20\n        if self.size == \"G\":\n            return 30\n        return 0\n\ndef main(): #Execu\u00e7\u00e3o da fun\u00e7\u00e3o principal\n    toalha = Towel(\"\", \"\") #Objeto Manipulado\n\n    while True: #Loop\n        line: str = input() #Entrada de Linhas\n        print (\"$\" + line)\n        args: list[str] = line.split(\" \") #Lista de Palavras\n\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"criar\": #color, size\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"mostrar\":\n            print(toalha)\n        elif args[0] == \"torcer\":\n            toalha.wringOut()\n        elif args[0] == \"seca\":\n            print(\"sim\" if toalha.isDry() else \"nao\")\n        elif args[0] == \"enxugar\": #amount\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n            print(\"fail: comando inv\u00e1lido\")\n\n\nmain()\n",
            "lines": "61"
        }
    ]
}